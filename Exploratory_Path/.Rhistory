randu
?random
??random
?sort
??Random
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
len(names)
length(names)
?seed
??seed
?set.seed
# random seed
set.seed(6508420456)
# random seed
set.seed(6508420456)
# random seed
set.seed(1)
# random seed
set.seed(850110)
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
# random seed
set.seed(850110)
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
# random seed
set.seed(01101985)
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
# random seed
set.seed(01101985)
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
# random seed
set.seed(01101985)
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
load("~/Documents/Documents_loaner/Research/MEP_HLM/MEP_merged.RData")
library(psych)
library(lmerTest        )
library(lmerTest        )
test.elev.3 <- lmer(Elevation ~ Attainability * Relevance + (1+Attainability+Relevance|study/ID),data=DATA,
control = lmerControl(
optimizer ='optimx', optCtrl=list(method='nlminb')),REML=F)
test.elev.3
summary(test.elev.3)
btest.elev.3  <- brms::brm(Elevation ~ Attainability * Relevance + (1+Attainability+Relevance|study/ID),
data=DATA, family = gaussian(),
cores=4,chains=4, iter=10000, save_all_pars =  TRUE,
sample_prior ='yes',prior=prior.coef,warmup=5000, seed=1660415,control = list(adapt_delta = 0.99),inits='0')
btest.elev.3
hypothesis(btest.elev.3,'Attainability:Relevance=0')
library(brms)
hypothesis(btest.elev.3,'Attainability:Relevance=0')
gc()
load("~/Documents/Documents_loaner/Research/MEP_HLM/MEP_merged.RData")
btest.plea.3
load("~/Documents/Documents_loaner/Research/MEP_HLM/MEP_merged1.RData")
bf.plea.03
btest.plea.3
summary(test.plea.3)
head(DATA)
describe(DATA)
library(psych)
describe(DATA)
class(DATA$ID)
class(DATA$Group)
class(DATA$Attainability)
class(DATA$story)
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H1.RData")
gc()
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H1.RData")
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_aligned.RData")
fitMeasures(cfa.whole.vx)[fits]
library(lavvan)
library(lavaan)
fitMeasures(cfa.whole.vx)[fits]
# alphas
psych::alpha(data[,vaxs],check.keys=TRUE)
cfa.whole.anti
fitMeasures(cfa.whole.anti)[fits]
fitMeasures(cfa.metric.anti)[fits]
# measurement alignment test
# extract parameters
par.anti <- invariance_alignment_cfa_config(dat = data.mi[,items.anti],
group = data.mi$UserLanguage)
fitMeasures(cfa.metric.anti)[fits]
psych::alpha(data[,item.consp],check.keys=TRUE)
psych::alpha(data[,items.anti],check.keys=TRUE)
library(lmerTest)
library(brms)
library(EMAtools)
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H1.RData")
icc(h1.2)
library(sjstats)
icc
icc(h1.2)
icc(h1.1)
performance::icc(h1.0)
performance::icc(h1.2)
ICC
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H2.RData")
icc(h2c.0)
icc(h2c.1)
icc(h2c.2)
icc(h2a.2)
icc(h2b.2)
icc(b.h1.2)
icc(b.h2a.2)
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H1.RData")
library(psych)
describe(data.filtered$resilience_1)
library(brms)
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H2.RData")
b.h2a.2
options(width=2000)
b.h2a.2
b.h2b.2
b.h2c.2
med_result
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H3.RData")
b.h3a.2
b.h3b.2
b.h3c.2
med3_result
knitr::opts_chunk$set(echo = TRUE)
install.packages("pacman")
install.packages("pacman")
install.packages("pacman")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse,
rio,
psych,
car,
lavaan,
sirt,
here)
# set the current directory
here::i_am('README.md')
here::here()
# load data
dat <- import(here("_cleandata/Final_COVIDiSTRESS_Vol2_cleaned.csv"))
colnames(dat)
vars <- colnames(dat)[80:87]
vars
test <- dat[,vars]
library(EFAtools)
N_FACTORS(test)
test1<-dat[dat$UserLanguage=='EN',vars]
N_FACTORS(test1)
N_FACTORS(test1,method='ML')
EFA_SPSS
EFA(test1,n_factors=1)
EFA(test1,n_factors=1,type='SPSS')
EFA(test1,n_factors=2,type='SPSS')
EFA(test1,n_factors=2,type='SPSS',rotation='promax')
EFA(test1,n_factors=2,type='SPSS',rotation='varimax')
N_FACTORS(test1,method='ML')
EFA(test1,n_factors=1,type='SPSS')
EFA(test1,n_factors=2,type='SPSS')
N_FACTORS(test1[,-7],method='ML')
EFA(test1[,-7])
EFA(test1[,-7],n_factors=1)
setwd("~/Documents/GitHub/COVIDiSTRESS2_Vaccine")
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/additional_mediation.RData")
library(lmerTest)
library(brms)
library(EMAtools)
?mediation
mediation(med2_result, treatment = 'trust_6')
bayestestR::mediation(med2_result, treatment = 'trust_6')
bayestestR::mediation(med2_result, treatment = 'trust_7')
bayestestR::mediation(med2_result)
bayestestR::mediation(med2_result,treatment=c('trust_6','trust_7'))
setwd("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Exploratory_Path")
# exploration
# 1. correlation
library(lmerTest)
library(brms)
library(EMAtools)
library(psych)
# load aligned data
load((file='../Vaccine_aligned.RData'))
# correlation
corr.test(data.filtered[,c('trust_6','trust_7','consp','anti')])
# standardize willingness and VAQB
data.filtered$vx <- scale(data.filtered$vx)
data.filtered$consp <- scale(data.filtered$consp)
data.filtered$anti <- scale(data.filtered$anti)
data.filtered$trust_6 <- scale(data.filtered$trust_6)
data.filtered$trust_7 <- scale(data.filtered$trust_7)
# load aligned data
load((file='../Vaccine_H3.RData'))
log(bf.med3.21$bf[1])
# load aligned data
load((file='../additional_mediation.RData'))
# load aligned data
load((file='../Vaccine_H2.RData'))
load((file='../Vaccine_H3.RData'))
log(bf.med.21$bf[1])
model_mediator1 <- bf(trust_7~consp+anti + gender + education + work_location + age+
SSS_faml+ relationship_status + (1+anti|residing_country))
model_mediator2 <- bf(trust_6~consp+anti + gender + education + work_location + age+
SSS_faml+ relationship_status + (1+anti+consp|residing_country))
model_outcome <- bf(vx ~ anti+consp+trust_6+trust_7 + gender + education + work_location + age+
SSS_faml+ relationship_status+ (1+trust_7+anti+trust_6+consp|residing_country))
# simultaneous path model
prior.coef <- brms::prior(cauchy(0.,1),class='b')
med_result = brm(
model_mediator1 +model_mediator2 + model_outcome + set_rescor(F),
data=data.filtered,
family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef
)
med_result
# simple model
model_mediators1 <- bf(trust_7~anti + gender + education + work_location + age+
SSS_faml+ relationship_status + (1+anti|residing_country))
model_mediators2 <- bf(trust_6~consp + gender + education + work_location + age+
SSS_faml+ relationship_status + (1+consp|residing_country))
model_outcomes <- bf(vx ~ anti+consp+trust_6+trust_7 + gender + education + work_location + age+
SSS_faml+ relationship_status+ (1+trust_7+anti+trust_6+consp|residing_country))
med_results = brm(
model_mediators1 +model_mediators2 + model_outcomes + set_rescor(F),
data=data.filtered,
family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef
)
# compare
bf <- bayes_factor(med_results,med_result,log=T)
bf
# compare
bf <- bayes_factor(med_results,med_result,log=T,maxiter=10000)
# simultaneous path model
prior.coef <- brms::prior(cauchy(0.,1),class='b')
model_mediator1 <- bf(trust_7~consp+anti + gender + education + work_location + age+
SSS_faml+ relationship_status + (1+anti+consp|residing_country))
model_mediator2 <- bf(trust_6~consp+anti + gender + education + work_location + age+
SSS_faml+ relationship_status + (1+anti+consp|residing_country))
model_outcome <- bf(vx ~ anti+consp+trust_6+trust_7 + gender + education + work_location + age+
SSS_faml+ relationship_status+ (1+trust_7+anti+trust_6+consp|residing_country))
med_result = brm(
model_mediator1 +model_mediator2 + model_outcome + set_rescor(F),
data=data.filtered,
family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef, iter=10000
)
# simple model
model_mediators1 <- bf(trust_7~anti + gender + education + work_location + age+
SSS_faml+ relationship_status + (1+anti|residing_country))
model_mediators2 <- bf(trust_6~consp + gender + education + work_location + age+
SSS_faml+ relationship_status + (1+consp|residing_country))
model_outcomes <- bf(vx ~ anti+consp+trust_6+trust_7 + gender + education + work_location + age+
SSS_faml+ relationship_status+ (1+trust_7+anti+trust_6+consp|residing_country))
med_results = brm(
model_mediators1 +model_mediators2 + model_outcomes + set_rescor(F),
data=data.filtered,
family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef, iter=10000
)
# compare
bf <- bayes_factor(med_results,med_result,log=T,maxiter=20000)
?save
save (c(med_result,med_results,bf),file='additional.RData
')
save (med_result,med_results,bf,file='additional.RData
')
med_results
bf
# correlation
corr.test(data.filtered[,c('trust_6','trust_7','consp','anti','vx')])
colnames(data.filtered)
# correlation
corr.test(data.filtered[,c('trust_6','trust_7','consp','anti','vx','vaccine_0neutral')])
bf
# descriptive statistics
load((file='../Vaccine_aligned.RData'))
library(psych)
vars <- c('consp','anti','trust_6','trust_7','vx','vaccine_0neutral')
describe(data.filtered[,vars])
describeBy(data.filtered[,vars],group=data.filtered$residing_country)
describe(data.filtered[,vars])
desc<-describeBy(data.filtered[,vars],group=data.filtered$residing_country)
View(desc)
desc[[1]]
length(desc)
countries <- length(desc)
test<-desc[[1]]
test$mean
describe(data.filtered[,vars])
desc<-describeBy(data.filtered[,vars],group=data.filtered$residing_country)
countries <- length(desc)
tables <- matrix(nrow=desc,ncol=12)
i
j
current
desc[[1]]
desc<-describeBy(data.filtered[,vars],group=data.filtered$residing_country)
countries <- length(desc)
tables <- matrix(nrow=desc,ncol=12)
desc<-describeBy(data.filtered[,vars],group=data.filtered$residing_country)
class(desc)
desc[[1]]
desc[[2]]
length(desc)
desc[[1]]$mean
desc[[2]]
countries <- length(desc)
countries
describe(data.filtered[,vars])
desc<-describeBy(data.filtered[,vars],group=data.filtered$residing_country)
countries <- length(desc)
tables <- matrix(nrow=countries,ncol=12)
for (i in 1:countries){
current <- desc[[i]]
for (j in 1:6){
tables[i, ((2*j)-1)]<-current$mean[j]
tables[i, ((2*j))]<-current$sd[j]
}
}
View(tables)
desc
med.result
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Exploratory_Path/additional.RData")
med_results
med_result
mediate(med_results)
mediation(med_results)
library(bayestestR)
mediation(med_results)
library(brms)
mediation(med_results)
?mediation
mediation(model = med_results)
mediation(model = med_results,treatment='anti',mediator='trust_7')
mediation(model = med_results,treatment='anti',mediator='trust_7', response='vx')
med_results
hypothesis(med_results,'trust7_anti<0')
hypothesis(med_results,'trust6_consp<0')
hypothesis(med_results,'vx_anti<0')
hypothesis(med_results,'vx_consp<0')
hypothesis(med_results,'vx_trust7<0')
hypothesis(med_results,'vx_trust_7<0')
hypothesis(med_results,'vx_trust_7>0')
hypothesis(med_results,'vx_trust_6>0')
hypothesis(med_result,'trust7_anti<0')
hypothesis(med_result,'trust6_consp<0')
hypothesis(med_result,'vx_anti<0')
hypothesis(med_result,'vx_consp<0')
hypothesis(med_result,'vx_trust_7>0')
hypothesis(med_result,'vx_trust_6>0')
hypothesis(med_result,'trust6_anti<0')
hypothesis(med_result,'trust7_consp<0')
