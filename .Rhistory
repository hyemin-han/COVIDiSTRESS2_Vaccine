randu
?random
??random
?sort
??Random
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
len(names)
length(names)
?seed
??seed
?set.seed
# random seed
set.seed(6508420456)
# random seed
set.seed(6508420456)
# random seed
set.seed(1)
# random seed
set.seed(850110)
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
# random seed
set.seed(850110)
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
# random seed
set.seed(01101985)
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
# random seed
set.seed(01101985)
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
# random seed
set.seed(01101985)
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
load("~/Documents/Documents_loaner/Research/MEP_HLM/MEP_merged.RData")
library(psych)
library(lmerTest        )
library(lmerTest        )
test.elev.3 <- lmer(Elevation ~ Attainability * Relevance + (1+Attainability+Relevance|study/ID),data=DATA,
control = lmerControl(
optimizer ='optimx', optCtrl=list(method='nlminb')),REML=F)
test.elev.3
summary(test.elev.3)
btest.elev.3  <- brms::brm(Elevation ~ Attainability * Relevance + (1+Attainability+Relevance|study/ID),
data=DATA, family = gaussian(),
cores=4,chains=4, iter=10000, save_all_pars =  TRUE,
sample_prior ='yes',prior=prior.coef,warmup=5000, seed=1660415,control = list(adapt_delta = 0.99),inits='0')
btest.elev.3
hypothesis(btest.elev.3,'Attainability:Relevance=0')
library(brms)
hypothesis(btest.elev.3,'Attainability:Relevance=0')
gc()
load("~/Documents/Documents_loaner/Research/MEP_HLM/MEP_merged.RData")
btest.plea.3
load("~/Documents/Documents_loaner/Research/MEP_HLM/MEP_merged1.RData")
bf.plea.03
btest.plea.3
summary(test.plea.3)
head(DATA)
describe(DATA)
library(psych)
describe(DATA)
class(DATA$ID)
class(DATA$Group)
class(DATA$Attainability)
class(DATA$story)
setwd("~/Documents/GitHub/COVIDiSTRESS2_Vaccine")
library(lmerTest)
library(brms)
library(EMAtools)
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H1.RData")
bf.h1.1
bf.h1.2
bf.h1.21
log(as.numeric(bf.h1.21[1]))
# predictor bayes factor check
# one direction -> positive
hypothesis(b.h1.2,'vx>0')
gc()
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H2.RData")
log(as.numeric(bf.h2a.1[1]))
log(as.numeric(bf.h2a.2[1]))
log(as.numeric(bf.h2a.21[1]))
# predictor bayes factor check
# one direction -> positive
hypothesis(b.h2a.2,'consp<0')
log(as.numeric(bf.h2b.1[1]))
log(as.numeric(bf.h2b.2[1]))
log(as.numeric(bf.h2b.21[1]))
hypothesis(b.h2b.2,'trust_6>0')
log(as.numeric(bf.h2c.1[1]))
log(as.numeric(bf.h2c.2[1]))
log(as.numeric(bf.h2c.21[1]))
# predictor bayes factor check
# one direction -> positive
hypothesis(b.h2c.2,'consp<0')
bf.med.10 <- bayes_factor(med1_result, med0_result)
bf.med.20 <- bayes_factor(med_result, med0_result)
bf.med.21 <- bayes_factor(med_result, med1_result)
log(bf.med.21$bf[1])
bf.med.10
bf.med.20
bayestestR::mediation(med_result)
gc()
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H3.RData")
log(as.numeric(bf.h3a.1[1]))
log(as.numeric(bf.h3a.2[1]))
log(as.numeric(bf.h3a.21[1]))
# predictor bayes factor check
# one direction -> positive
hypothesis(b.h3a.2,'anti<0')
log(as.numeric(bf.h3b.1[1]))
log(as.numeric(bf.h3b.2[1]))
log(as.numeric(bf.h3b.21[1]))
hypothesis(b.h3b.2,'trust_7>0')
log(as.numeric(bf.h3c.1[1]))
log(as.numeric(bf.h3c.2[1]))
log(as.numeric(bf.h3c.21[1]))
# predictor bayes factor check
# one direction -> positive
hypothesis(b.h3c.2,'anti<0')
bf.med3.10
log(bf.med3.21$bf[1])
bayestestR::mediation(med3_result)
AIC(h3c.0,h3c.1,h3c.2)
summary(h3c.2)
# effect size
EMAtools::lme.dscore(h3c.1, type='lme4', data=data.filtered)
table(data.filtered$residing_country)
length(table(data.filtered$residing_country))
