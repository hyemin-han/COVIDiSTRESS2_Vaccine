'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
load("~/Documents/Documents_loaner/Research/MEP_HLM/MEP_merged.RData")
library(psych)
library(lmerTest        )
library(lmerTest        )
test.elev.3 <- lmer(Elevation ~ Attainability * Relevance + (1+Attainability+Relevance|study/ID),data=DATA,
control = lmerControl(
optimizer ='optimx', optCtrl=list(method='nlminb')),REML=F)
test.elev.3
summary(test.elev.3)
btest.elev.3  <- brms::brm(Elevation ~ Attainability * Relevance + (1+Attainability+Relevance|study/ID),
data=DATA, family = gaussian(),
cores=4,chains=4, iter=10000, save_all_pars =  TRUE,
sample_prior ='yes',prior=prior.coef,warmup=5000, seed=1660415,control = list(adapt_delta = 0.99),inits='0')
btest.elev.3
hypothesis(btest.elev.3,'Attainability:Relevance=0')
library(brms)
hypothesis(btest.elev.3,'Attainability:Relevance=0')
gc()
load("~/Documents/Documents_loaner/Research/MEP_HLM/MEP_merged.RData")
btest.plea.3
load("~/Documents/Documents_loaner/Research/MEP_HLM/MEP_merged1.RData")
bf.plea.03
btest.plea.3
summary(test.plea.3)
head(DATA)
describe(DATA)
library(psych)
describe(DATA)
class(DATA$ID)
class(DATA$Group)
class(DATA$Attainability)
class(DATA$story)
setwd("~/Documents/GitHub/COVIDiSTRESS2_Vaccine")
library(lmerTest)
library(brms)
library(EMAtools)
# load aligned data
load((file='Vaccine_aligned.RData'))
# standardize willingness and VAQB
data.filtered$vx <- scale(data.filtered$vx)
data.filtered$consp <- scale(data.filtered$consp)
data.filtered$anti <- scale(data.filtered$anti)
data.filtered$trust_6 <- scale(data.filtered$trust_6)
data.filtered$trust_7 <- scale(data.filtered$trust_7)
# model 0 (null model) demo and random intercepts
h2a.0 <- lmer(trust_6 ~ gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country), data=data.filtered)
# model 1 = model 1 + predictor
h2a.1 <- lmer(trust_6 ~ consp+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country), data=data.filtered)
# model 2 = model 1 + random slopes
h2a.2 <- lmer(trust_6 ~ consp+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1+consp|residing_country), data=data.filtered)
anova(h2a.0,h2a.1,h2a.2)
AIC(h2a.0,h2a.1,h2a.2)
BIC(h2a.0,h2a.1,h2a.2)
# Bayesian
# prior -> normal distribution
prior.coef <- brms::prior(cauchy(0.,1),class='b')
#model 0
b.h2a.0 <- brms::brm(trust_6 ~ gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415)
#model 1
b.h2a.1 <- brms::brm(trust_6 ~ consp+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
#model 2
b.h2a.2 <- brms::brm(trust_6 ~ consp+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1+consp|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
# model bayes factors
bf.h2a.1 <- bayes_factor(b.h2a.1,b.h2a.0)
bf.h2a.2 <- bayes_factor(b.h2a.2,b.h2a.0)
bf.h2a.21 <- bayes_factor(b.h2a.2,b.h2a.1)
log(as.numeric(bf.h2a.1[1]))
log(as.numeric(bf.h2a.2[1]))
log(as.numeric(bf.h2a.21[1]))
# predictor bayes factor check
# one direction -> positive
hypothesis(b.h2a.2,'consp>0')
# predictor bayes factor check
# one direction -> positive
hypothesis(b.h2a.2,'consp<0')
# effect size
EMAtools::lme.dscore(h2a.1, type='lme4', data=data.filtered)
save.image(file='Vaccine_H2.RData')
#####
# H2b : vx ~ trust _ 6
# model 0 (null model) demo and random intercepts
h2b.0 <- lmer(vx ~ gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country), data=data.filtered)
# model 1 = model 1 + predictor
h2b.1 <- lmer(vx ~ trust_6+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country), data=data.filtered)
# model 2 = model 1 + random slopes
h2b.2 <- lmer(vx ~ trust_6+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1+trust_6|residing_country), data=data.filtered)
AIC(h2b.0)
AIC(h2b.0,h2b.1)
AIC(h2b.0,h2b.1,h2b.2)
#model 0
b.h2b.0 <- brms::brm(vx ~ gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415)
#model 1
b.h2b.1 <- brms::brm(vx ~ trust_6+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
#model 2
b.h2b.2 <- brms::brm(vx ~ trust_6+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1+trust_6|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
# model bayes factors
bf.h2b.1 <- bayes_factor(b.h2b.1,b.h2b.0)
bf.h2b.2 <- bayes_factor(b.h2b.2,b.h2b.0)
bf.h2b.21 <- bayes_factor(b.h2b.2,b.h2b.1)
log(as.numeric(bf.h2b.1[1]))
log(as.numeric(bf.h2b.2[1]))
log(as.numeric(bf.h2b.21[1]))
# predictor bayes factor check
# one direction -> positive
hypothesis(b.h2b.2,'trust_6>0')
# effect size
EMAtools::lme.dscore(h2b.1, type='lme4', data=data.filtered)
h2c.0 <- lmer(vx ~ gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country), data=data.filtered)
# model 1 = model 1 + predictor
h2c.1 <- lmer(vx ~ consp+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country), data=data.filtered)
# model 2 = model 1 + random slopes
h2c.2 <- lmer(vx ~ consp+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1+trust_6|residing_country), data=data.filtered)
AIC(h2c.0,h2c.1,h2c.2)
#model 0
b.hcb.0 <- brms::brm(vx ~ gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415)
#model 1
b.h2c.1 <- brms::brm(vx ~ consp+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
#model 2
b.h2c.2 <- brms::brm(vx ~ consp+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1+consp|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
# model bayes factors
bf.h2c.1 <- bayes_factor(b.h2c.1,b.h2c.0)
bf.h2c.2 <- bayes_factor(b.h2c.2,b.h2c.0)
bf.h2c.21 <- bayes_factor(b.h2c.2,b.h2c.1)
log(as.numeric(bf.h2c.1[1]))
log(as.numeric(bf.h2c.2[1]))
log(as.numeric(bf.h2c.21[1]))
# predictor bayes factor check
# one direction -> positive
hypothesis(b.h2c.2,'consp<0')
# effect size
EMAtools::lme.dscore(h2c.1, type='lme4', data=data.filtered)
# model bayes factors
bf.h2c.1 <- bayes_factor(b.h2c.1,b.h2c.0)
b.h2c.0 <- b.hcb.0
# model bayes factors
bf.h2c.1 <- bayes_factor(b.h2c.1,b.h2c.0)
bf.h2c.2 <- bayes_factor(b.h2c.2,b.h2c.0)
log(as.numeric(bf.h2c.1[1]))
log(as.numeric(bf.h2c.2[1]))
log(as.numeric(bf.h2c.21[1]))
save.image(file='Vaccine_H2.RData')
#### H2d/e
# mediation without intercepts
model1_mediator <- bf(consp~trust_6 + gender + education + work_location + age+
SSS_faml+ relationship_status + (1|residing_country))
model1_outcome <- bf(vx ~ consp+trust_6 + gender + education + work_location + age+
SSS_faml+ relationship_status+ (1+consp|residing_country))
med1_result = brm(
model1_mediator + model1_outcome + set_rescor(F),
data=data.filtered,
family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef
)
med_result
med1_result
options(width = 2000)
med1_result
save.image(file='Vaccine_H2.RData')
bayestestR::mediation(med1_result)
# mediation model (full)
model_mediator <- bf(consp~trust_6 + gender + education + work_location + age+
SSS_faml+ relationship_status + (1+trust_6|residing_country))
model_outcome <- bf(vx ~ consp+trust_6 + gender + education + work_location + age+
SSS_faml+ relationship_status+ (1+trust_6+consp|residing_country))
med_result = brm(
model_mediator + model_outcome + set_rescor(F),
data=data.filtered,
family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef
)
summary(med_result)
bayestestR::mediation(med_result)
save.image(file='Vaccine_H2.RData')
# compare models
bf.med.10 <- bayes_factor(b.h2c.0, med1_result)
bf.med.10
bf.med.20 <- bayes_factor(b.h2c.0, med2_result)
bf.med.20 <- bayes_factor(b.h2c.0, med_result)
bf.med.21 <- bayes_factor(med_result, med1_result)
bf.med.21
#### H2d/e
# null mediation?
model0_mediator <- bf(consp~ gender + education + work_location + age+
SSS_faml+ relationship_status + (1|residing_country))
model0_outcome <- bf(vx ~  gender + education + work_location + age+
SSS_faml+ relationship_status+ (1|residing_country))
med0_result = brm(
model0_mediator + model0_outcome + set_rescor(F),
data=data.filtered,
family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef
)
# mediation without intercepts
model1_mediator <- bf(consp~trust_6 + gender + education + work_location + age+
SSS_faml+ relationship_status + (1|residing_country))
model1_outcome <- bf(vx ~ consp+trust_6 + gender + education + work_location + age+
SSS_faml+ relationship_status+ (1|residing_country))
options(width = 2000)
med1_result = brm(
model1_mediator + model1_outcome + set_rescor(F),
data=data.filtered,
family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef
)
bayestestR::mediation(med1_result)
save.image(file='Vaccine_H2.RData')
# compare models
bf.med.10 <- bayes_factor(med1_result, med0_result)
bf.med.10
bf.med.20 <- bayes_factor(med2_result, med0_result)
bf.med.20 <- bayes_factor(med_result, med0_result)
bf.med.20
log(bf.med.21$bf[1])
save.image(file='Vaccine_H2.RData')
https://www.amazon.com/Gorilla-Percent-Silicone-Sealant-Squeeze/dp/B01B5RBOA6/ref=sr_1_5?crid=A6K4J49M1E8A&keywords=quick%2Bdry%2Bclear%2Bcaulk&qid=1653444365&sprefix=quick%2Bdry%2Bclear%2Caps%2C60&sr=8-5&th=1
library(lmerTest)
library(brms)
library(EMAtools)
# load aligned data
load((file='Vaccine_aligned.RData'))
# standardize willingness and VAQB
data.filtered$vx <- scale(data.filtered$vx)
data.filtered$consp <- scale(data.filtered$consp)
data.filtered$anti <- scale(data.filtered$anti)
data.filtered$trust_6 <- scale(data.filtered$trust_6)
data.filtered$trust_7 <- scale(data.filtered$trust_7)
# frequentist
# demographics to be determined....
# Age, gender, marital status, education level, SES, cohabitants, working from home
# H3a trust_7 ~ anti
options(width=1000)
# model 0 (null model) demo and random intercepts
h3a.0 <- lmer(trust_7 ~ gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country), data=data.filtered)
# model 1 = model 1 + predictor
h3a.1 <- lmer(trust_7 ~ anti+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country), data=data.filtered)
# model 2 = model 1 + random slopes
h3a.2 <- lmer(trust_7 ~ anti+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1+anti|residing_country), data=data.filtered)
# Bayesian
# prior -> normal distribution
prior.coef <- brms::prior(cauchy(0.,1),class='b')
#model 0
b.h3a.0 <- brms::brm(trust_7 ~ gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415)
#model 1
b.h3a.1 <- brms::brm(trust_7 ~ anti+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
#model 2
b.h3a.2 <- brms::brm(trust_7 ~ anti+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1+anti|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
b.h3a.2
# model bayes factors
bf.h3a.1 <- bayes_factor(b.h3a.1,b.h3a.0)
bf.h3a.2 <- bayes_factor(b.h3a.2,b.h3a.0)
bf.h3a.21 <- bayes_factor(b.h3a.2,b.h3a.1)
log(as.numeric(bf.h3a.1[1]))
log(as.numeric(bf.h3a.2[1]))
log(as.numeric(bf.h3a.21[1]))
# predictor bayes factor check
# one direction -> positive
hypothesis(b.h3a.2,'anti<0')
# effect size
EMAtools::lme.dscore(h3a.1, type='lme4', data=data.filtered)
#####
# H3b : vx ~ trust _ 7
# model 0 (null model) demo and random intercepts
h3b.0 <- lmer(vx ~ gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country), data=data.filtered)
# model 1 = model 1 + predictor
h3b.1 <- lmer(vx ~ trust_7+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country), data=data.filtered)
# model 2 = model 1 + random slopes
h3b.2 <- lmer(vx ~ trust_7+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1+trust_7|residing_country), data=data.filtered)
#model 0
b.h3b.0 <- brms::brm(vx ~ gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415)
#model 1
b.h3b.1 <- brms::brm(vx ~ trust_7+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
#model 2
b.h3b.2 <- brms::brm(vx ~ trust_7+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1+trust_7|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
b.h3b.2
# model bayes factors
bf.h3b.1 <- bayes_factor(b.h3b.1,b.h3b.0)
bf.h3b.2 <- bayes_factor(b.h3b.2,b.h3b.0)
bf.h3b.21 <- bayes_factor(b.h3b.2,b.h3b.1)
log(as.numeric(bf.h3b.1[1]))
log(as.numeric(bf.h3b.2[1]))
log(as.numeric(bf.h3b.21[1]))
EMAtools::lme.dscore(h3b.1, type='lme4', data=data.filtered)
hypothesis(b.h3b.2,'trust_7>0')
###
# H3c : vx ~ anti
# model 0 (null model) demo and random intercepts
h3c.0 <- lmer(vx ~ gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country), data=data.filtered)
# model 1 = model 1 + predictor
h3c.1 <- lmer(vx ~ anti+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country), data=data.filtered)
# model 2 = model 1 + random slopes
h3c.2 <- lmer(vx ~ anti+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1+anti|residing_country), data=data.filtered)
#model 0
b.h3c.0 <- brms::brm(vx ~ gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415)
#model 1
b.h3c.1 <- brms::brm(vx ~ anti+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
#model 2
b.h3c.2 <- brms::brm(vx ~ anti+gender + education + work_location + age+
SSS_faml+ relationship_status+
(1+anti|residing_country),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
b.h3c.2
# model bayes factors
bf.h3c.1 <- bayes_factor(b.h3c.1,b.h3c.0)
bf.h3c.2 <- bayes_factor(b.h3c.2,b.h3c.0)
bf.h3c.21 <- bayes_factor(b.h3c.2,b.h3c.1)
log(as.numeric(bf.h3c.1[1]))
log(as.numeric(bf.h3c.2[1]))
log(as.numeric(bf.h3c.21[1]))
# predictor bayes factor check
# one direction -> positive
hypothesis(b.h3c.2,'anti<0')
#### H3d/e
# null mediation?
model30_mediator <- bf(anti~ gender + education + work_location + age+
SSS_faml+ relationship_status + (1|residing_country))
model30_outcome <- bf(vx ~  gender + education + work_location + age+
SSS_faml+ relationship_status+ (1|residing_country))
options(width = 2000)
med30_result = brm(
model30_mediator + model30_outcome + set_rescor(F),
data=data.filtered,
family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef
)
#### H3d/e
# null mediation?
model30_mediator <- bf(trust_7~ gender + education + work_location + age+
SSS_faml+ relationship_status + (1|residing_country))
model30_outcome <- bf(vx ~  gender + education + work_location + age+
SSS_faml+ relationship_status+ (1|residing_country))
options(width = 2000)
med30_result = brm(
model30_mediator + model30_outcome + set_rescor(F),
data=data.filtered,
family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef
)
# mediation without intercepts
model31_mediator <- bf(trust_7~anti + gender + education + work_location + age+
SSS_faml+ relationship_status + (1|residing_country))
model31_outcome <- bf(vx ~ anti+trust_7 + gender + education + work_location + age+
SSS_faml+ relationship_status+ (1|residing_country))
options(width = 2000)
med31_result = brm(
model31_mediator + model31_outcome + set_rescor(F),
data=data.filtered,
family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef
)
bayestestR::mediation(med31_result)
model3_mediator <- bf(trust_7~anti + gender + education + work_location + age+
SSS_faml+ relationship_status + (1+trust_7|residing_country))
model3_outcome <- bf(vx ~ anti+trust_7 + gender + education + work_location + age+
SSS_faml+ relationship_status+ (1+trust_7+anti|residing_country))
med3_result = brm(
model3_mediator + model3_outcome + set_rescor(F),
data=data.filtered,
family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef
)
options(width = 2000)
summary(med3_result)
bayestestR::mediation(med3_result)
# compare models
bf.med3.10 <- bayes_factor(med31_result, med30_result)
bf.med3.20 <- bayes_factor(med3_result, med30_result)
bf.med3.21 <- bayes_factor(med3_result, med31_result)
log(bf.med3.21$bf[1])
save.image(file='Vaccine_H3.RData')
log(bf.med3.21$bf[1])
bf.med3.21 <- bayes_factor(med3_result, med31_result)
save.image(file='Vaccine_H3.RData')
