randu
?random
??random
?sort
??Random
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
len(names)
length(names)
?seed
??seed
?set.seed
# random seed
set.seed(6508420456)
# random seed
set.seed(6508420456)
# random seed
set.seed(1)
# random seed
set.seed(850110)
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
# random seed
set.seed(850110)
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
# random seed
set.seed(01101985)
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
# random seed
set.seed(01101985)
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
# random seed
set.seed(01101985)
# first names
names<-c(
'Abdullah',
'Andrea',
'Candace',
'Delany',
'Diana',
'Elia',
'Erin',
'James',
'Kim',
'Qi',
'Sherry',
'Virginia'
)
# random order
sample(names)
load("~/Documents/Documents_loaner/Research/MEP_HLM/MEP_merged.RData")
library(psych)
library(lmerTest        )
library(lmerTest        )
test.elev.3 <- lmer(Elevation ~ Attainability * Relevance + (1+Attainability+Relevance|study/ID),data=DATA,
control = lmerControl(
optimizer ='optimx', optCtrl=list(method='nlminb')),REML=F)
test.elev.3
summary(test.elev.3)
btest.elev.3  <- brms::brm(Elevation ~ Attainability * Relevance + (1+Attainability+Relevance|study/ID),
data=DATA, family = gaussian(),
cores=4,chains=4, iter=10000, save_all_pars =  TRUE,
sample_prior ='yes',prior=prior.coef,warmup=5000, seed=1660415,control = list(adapt_delta = 0.99),inits='0')
btest.elev.3
hypothesis(btest.elev.3,'Attainability:Relevance=0')
library(brms)
hypothesis(btest.elev.3,'Attainability:Relevance=0')
gc()
load("~/Documents/Documents_loaner/Research/MEP_HLM/MEP_merged.RData")
btest.plea.3
load("~/Documents/Documents_loaner/Research/MEP_HLM/MEP_merged1.RData")
bf.plea.03
btest.plea.3
summary(test.plea.3)
head(DATA)
describe(DATA)
library(psych)
describe(DATA)
class(DATA$ID)
class(DATA$Group)
class(DATA$Attainability)
class(DATA$story)
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H1.RData")
gc()
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H1.RData")
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_aligned.RData")
fitMeasures(cfa.whole.vx)[fits]
library(lavvan)
library(lavaan)
fitMeasures(cfa.whole.vx)[fits]
# alphas
psych::alpha(data[,vaxs],check.keys=TRUE)
cfa.whole.anti
fitMeasures(cfa.whole.anti)[fits]
fitMeasures(cfa.metric.anti)[fits]
# measurement alignment test
# extract parameters
par.anti <- invariance_alignment_cfa_config(dat = data.mi[,items.anti],
group = data.mi$UserLanguage)
fitMeasures(cfa.metric.anti)[fits]
psych::alpha(data[,item.consp],check.keys=TRUE)
psych::alpha(data[,items.anti],check.keys=TRUE)
library(lmerTest)
library(brms)
library(EMAtools)
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H1.RData")
icc(h1.2)
library(sjstats)
icc
icc(h1.2)
icc(h1.1)
performance::icc(h1.0)
performance::icc(h1.2)
ICC
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H2.RData")
icc(h2c.0)
icc(h2c.1)
icc(h2c.2)
icc(h2a.2)
icc(h2b.2)
icc(b.h1.2)
icc(b.h2a.2)
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H1.RData")
library(psych)
describe(data.filtered$resilience_1)
library(brms)
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H2.RData")
b.h2a.2
options(width=2000)
b.h2a.2
b.h2b.2
b.h2c.2
med_result
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/Vaccine_H3.RData")
b.h3a.2
b.h3b.2
b.h3c.2
med3_result
knitr::opts_chunk$set(echo = TRUE)
install.packages("pacman")
install.packages("pacman")
install.packages("pacman")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse,
rio,
psych,
car,
lavaan,
sirt,
here)
# set the current directory
here::i_am('README.md')
here::here()
# load data
dat <- import(here("_cleandata/Final_COVIDiSTRESS_Vol2_cleaned.csv"))
colnames(dat)
vars <- colnames(dat)[80:87]
vars
test <- dat[,vars]
library(EFAtools)
N_FACTORS(test)
test1<-dat[dat$UserLanguage=='EN',vars]
N_FACTORS(test1)
N_FACTORS(test1,method='ML')
EFA_SPSS
EFA(test1,n_factors=1)
EFA(test1,n_factors=1,type='SPSS')
EFA(test1,n_factors=2,type='SPSS')
EFA(test1,n_factors=2,type='SPSS',rotation='promax')
EFA(test1,n_factors=2,type='SPSS',rotation='varimax')
N_FACTORS(test1,method='ML')
EFA(test1,n_factors=1,type='SPSS')
EFA(test1,n_factors=2,type='SPSS')
N_FACTORS(test1[,-7],method='ML')
EFA(test1[,-7])
EFA(test1[,-7],n_factors=1)
setwd("~/Documents/GitHub/COVIDiSTRESS2_Vaccine")
load("~/Documents/GitHub/COVIDiSTRESS2_Vaccine/additional_mediation.RData")
library(lmerTest)
library(brms)
library(EMAtools)
?mediation
mediation(med2_result, treatment = 'trust_6')
bayestestR::mediation(med2_result, treatment = 'trust_6')
bayestestR::mediation(med2_result, treatment = 'trust_7')
bayestestR::mediation(med2_result)
bayestestR::mediation(med2_result,treatment=c('trust_6','trust_7'))
